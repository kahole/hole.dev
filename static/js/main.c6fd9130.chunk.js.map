{"version":3,"sources":["lisp.js","LispREPL.js","App.js","serviceWorker.js","index.js"],"names":["sanitize","input","replace","tokenize","lexemes","lex_builder","quote_level","is_string_literal","pop_lex_builder","b","i","length","c","match","push","parse_symbol","s","isNaN","parse","ast","popout","l","shift","lookup","env","level_store","key","a","hasOwnProperty","undefined","builtins","console","log","interpret_exp","Array","isArray","operator","proc","slice","args","results","interpret","exp","store","reduce","sum","arg","splice","find","e","value","params","body_ast","lam_args","obj","JSON","Object","keys","map","k","val","flat","str","substring","RegExp","acc","assign","Error","LispREPL","useState","historyNavIndex","setHistoryNavIndex","history","setHistory","currentLine","setCurrentLine","useEffect","sampleExpressions","interpreted","command","output","toString","call","sampleInter","then","h","historyList","className","style","color","run","result","message","onChange","target","onKeyPress","onKeyDown","navDelta","preventDefault","commandIndex","reverse","App","href","id","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"21BAEA,SAASA,EAASC,GAChB,OAAOA,EAAMC,QAAQ,OAAQ,KAAKA,QAAQ,iBAAkB,KAG9D,SAASC,EAASF,GAahB,IAXA,IAAMG,EAAU,GACZC,EAAc,GACdC,EAAc,EACdC,GAAoB,EAElBC,EAAkB,WACtB,IAAIC,EAAIJ,EAER,OADAA,EAAc,GACPI,GAGAC,EAAI,EAAGA,EAAIT,EAAMU,OAAQD,IAAI,CACpC,IAAME,EAAIX,EAAMS,GAEhB,GAAIJ,GAAe,IACP,MAANM,GAAaN,GAAe,EAC9BA,EAAc,EACC,MAANM,EACTN,IACe,MAANM,GACTN,IAEEA,GAAe,GACjBD,GAAeO,OAKnB,GAAIL,EAAJ,CACE,GAAU,OAANK,EAAY,CACdP,GAAeJ,IAAQS,GACvB,SAEQ,MAANE,IACAL,GAAoB,GAExBF,GAAeO,OAIjBC,YACE,KAAK,SAAAD,GAAC,OAAIR,EAAQU,KAAKF,KACvB,KAAK,SAAAA,GAAC,OAA4B,IAAvBP,EAAYM,OAAe,KAAOP,EAAQU,KAAKN,OAC1D,KAAK,SAAAI,GAAC,MAAI,CAAwB,IAAvBP,EAAYM,OAAe,KAAOP,EAAQU,KAAKN,KAAoBJ,EAAQU,KAAKF,MAC3F,KAAK,SAAAA,GACHN,EAAc,EACdD,GAAeO,IAEjB,KAAM,SAAAA,GACJL,GAAoB,EACpBF,GAAeO,KAEjB,SAAAA,GAAOP,GAAeO,IAZxBC,CAaED,GAMJ,OAHIP,EAAYM,OAAS,GACvBP,EAAQU,KAAKN,KAERJ,EAGT,SAASW,EAAaC,GACpB,OAAIC,MAAMD,GACDH,YACL,QAAQ,EACR,SAAS,GACT,SAAAG,GAAC,OAAIA,IAHAH,CAILG,IAEMA,EAIZ,SAASE,EAAMd,GAIb,IAHA,IAAMe,EAAM,GAERC,GAAS,EACNhB,EAAQO,OAAS,IAAMS,GAC5BP,YACE,KAAK,SAAAQ,GAAC,OAAIF,EAAIL,KAAKI,EAAMd,MACzB,KAAK,SAAAiB,GAAOD,GAAS,KACrB,SAAAC,GAAC,OAAIF,EAAIL,KAAKC,EAAaM,MAH7BR,CAIET,EAAQkB,SAEZ,OAAOH,E,SAGMI,E,kFAAf,WAAsBC,EAAKC,EAAaC,GAAxC,SAAAC,EAAA,0DACMH,EAAII,eAAeF,GADzB,yCAEWF,EAAIE,IAFf,WAGaD,EAAYG,eAAeF,GAHxC,yCAIWD,EAAYC,IAJvB,mBAO0BG,IAAlBC,EAASJ,IACXK,QAAQC,IAAI,uBAAyBN,GAR3C,kBAUWI,EAASJ,IAVpB,6C,+BAceO,E,kFAAf,WAA6Bd,EAAKK,EAAKC,GAAvC,uBAAAE,EAAA,0DACMO,MAAMC,QAAQhB,GADpB,wBAEUiB,EAAWjB,EAAI,GAFzB,SAGuBI,EAAOC,EAAKC,EAAaW,GAHhD,OAGUC,EAHV,YAKYD,EALZ,OAMS,OANT,OAOS,UAPT,OASS,QATT,QAUS,WAVT,QAWS,UAXT,QAYS,SAZT,oCAQaC,EARb,UAQyBJ,EAAcd,EAAI,GAAIK,EAAKC,GARpD,4CAQqEN,EAAImB,MAAM,IAR/E,8BAQoFd,EARpF,KAQyFC,EARzF,6EAaaY,EAAKlB,EAAImB,MAAM,GAAId,EAAKC,IAbrC,QAeYc,EAAOpB,EAAImB,MAAM,GACjBE,EAAU,GACP9B,EAAI,EAjBnB,aAiBsBA,EAAI6B,EAAK5B,QAjB/B,6BAkBQ6B,EAlBR,UAkB2BP,EAAcM,EAAK7B,GAAIc,EAAKC,GAlBvD,yBAkBgBX,KAlBhB,wBAiBuCJ,IAjBvC,yCAoBmB2B,EAAKG,EAAShB,EAAKC,GApBtC,4EAwBuB,kBAARN,EAxBf,oBAyBqB,MAAXA,EAAI,GAzBd,0CA0BeA,EAAImB,MAAM,IA1BzB,WA2B4B,MAAXnB,EAAI,GA3BrB,0CA4BeA,EAAImB,MAAM,EAAGnB,EAAIR,OAAO,IA5BvC,yBA8BqBY,EAAOC,EAAKC,EAAaN,GA9B9C,kGAiCaA,GAjCb,6C,+BAsCesB,E,gFAAf,WAAyBtB,EAAKK,GAA9B,mBAAAG,EAAA,sDAEQa,EAAU,GACP9B,EAAI,EAHf,YAGkBA,EAAIS,EAAIR,QAH1B,wBAIQ+B,EAAMvB,EAAIT,GAJlB,KAKI8B,EALJ,SAKuBP,EAAcS,EAAKlB,EAAKmB,GAL/C,wBAKY7B,KALZ,uBAGkCJ,IAHlC,gDAQS8B,GART,6C,sBAWA,IAAMG,EAAQ,GAERb,EAAW,CACf,IAAK,SAAAS,GAAI,OAAIA,EAAKK,QAAO,SAACC,EAAKC,GAAN,OAAcA,EAAID,IAAK,IAChD,IAAK,SAAAN,GAAI,OAAIA,EAAK5B,OAAS,EAAI4B,EAAKD,MAAM,GAAGM,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAIC,IAAKP,EAAK,KAAQA,EAAK,IAC7F,IAAK,SAAAA,GAAI,OAAIA,EAAKK,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAIC,IAAK,IAChD,IAAK,SAAAP,GAAI,OAAIA,EAAKQ,OAAO,GAAGH,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAIC,IAAKP,EAAK,KAC/D,MAAO,SAAAA,GAAI,OAAIA,EAAK,KAAOA,EAAK,IAChC,IAAK,SAAAA,GAAI,OAAIA,EAAK,GAAKA,EAAK,IAC5B,IAAK,SAAAA,GAAI,OAAIA,EAAK,GAAKA,EAAK,IAC5B,GAAM,SAACA,EAAMf,EAAKC,GAAZ,OAA4Bc,EAAK,GAAKN,EAAcM,EAAK,GAAIf,EAAKC,GAAeQ,EAAcM,EAAK,GAAIf,EAAKC,IACnH,IAAO,SAAAc,GAAI,OAAKA,EAAK,IACrB,KAAQ,SAAAA,GAAI,OAAKL,MAAMC,QAAQI,EAAK,IAAnB,CAA0BA,EAAK,IAA/B,mBAAsCA,EAAK,KAAM,CAACA,EAAK,GAAIA,EAAK,KACjF,KAAQ,SAAAA,GAAI,OAAIA,GAChB,IAAO,SAAAA,GAAI,OAAIA,EAAK,GAAG,IACvB,IAAO,SAAAA,GAAI,OAAIA,EAAK,GAAGD,MAAM,IAC7B,OAAU,SAAAC,GAAI,OAAIA,EAAK,GAAG5B,QAC1B,MAAS,SAAA4B,GAEP,OADaA,EAAK,GAAGS,MAAK,SAAAC,GAAC,OAAIA,EAAE,KAAOV,EAAK,OAC9B,IAEjB,IAAO,SAACA,EAAMf,EAAKC,GAEjB,OADAA,EAAYc,EAAK,IAAMA,EAAK,GACrBA,EAAK,IAEd,MAAS,SAACA,EAAMf,EAAKC,GAEnB,OADAA,EAAYc,EAAK,IAAMT,EAAQ,OAAWS,EAAKD,MAAM,GAAId,EAAKC,GACvDA,EAAYc,EAAK,KAE1B,IAAO,SAACA,EAAMf,EAAKC,GAAiB,IAAD,cACZc,EAAK,GADO,GAC1Bb,EAD0B,KACrBwB,EADqB,KAGjC,OADA1B,EAAG,KAAQA,EAAR,eAAcE,EAAMO,EAAciB,EAAO1B,EAAKC,KAC1CQ,EAAcM,EAAK,GAAIf,EAAKC,IAErC,OAAU,SAACc,EAAMf,EAAKC,GAAiB,IAAD,cACTc,EADS,GAC7BY,EAD6B,KACrBC,EADqB,KAEpC,OAAO,SAAAC,GACL,IAAK,IAAI3C,EAAI,EAAGA,EAAIyC,EAAOxC,SAAUD,EACnCc,EAAG,KAAOA,EAAP,eAAa2B,EAAOzC,GAAK2C,EAAS3C,KAEvC,OAAOuB,EAAcmB,EAAU5B,EAAKC,KAGxC,KAAQ,SAAAc,GAAI,OAAIA,EAAK,GAAGA,EAAKQ,OAAO,KACpC,KAAQ,SAACR,EAAMf,EAAKC,GAAZ,OAA4BQ,EAAcf,EAAMf,EAASoC,EAAK,KAAK,GAAIf,EAAKC,IACpF,MAAS,SAAAc,GAAI,OAAIA,EAAKA,EAAK5B,OAAO,IAClC,MAAS,SAAA4B,GAAI,OAAIR,QAAQC,IAAIO,EAAK,KAKlC,KAAQ,SAAAA,GACN,IAAMe,EAAMC,KAAKrC,MAAMqB,EAAK,IAC5B,OAAOiB,OAAOC,KAAKH,GAAKI,KAAI,SAAAC,GAAC,MAAI,CAACA,EAAGL,EAAIK,QAI3C,MAAQ,WAAR,4BAAS,WAAOpB,EAAMf,EAAKC,GAAlB,iBAAAE,EAAA,sDACDiC,EAAMrB,EAAK,GACR7B,EAAI,EAFN,YAESA,EAAI6B,EAAK5B,OAAO,GAFzB,6BAGDiD,EAHC,SAGa3B,EAAcM,EAAK7B,GAAIc,EAAKC,GAHzC,2EAIIQ,EAAcM,EAAK7B,EAAE,GAAIc,EAAKC,IAJlC,OAE4Bf,GAAG,EAF/B,gDAOAuB,EAAcM,EAAKA,EAAK5B,OAAO,GAAIa,EAAKC,IAPxC,4CAAT,uDAAQ,GASR,MAAS,SAAAc,GAAI,OAAIA,EAAK,GAAGD,MAAMC,EAAK,GAAIA,EAAK,KAC7C,OAAU,SAAAA,GAAI,4BAAQA,EAAK,IAAb,YAAoBA,EAAK,MACvC,IAAO,SAAAA,GAAI,OAAIA,EAAK,GAAGA,EAAK,KAC5B,cAAe,SAAAA,GAAI,OAAIA,EAAK,GAAGsB,OAAOlD,QACtC,IAAO,GACP,aAAc,SAAA4B,GAAI,OAAIxB,EAAawB,EAAK,KACxC,KAAQ,SAAAA,GAAI,cAAWA,EAAK,IAC5B,UAAW,SAAAA,GAAI,OAAIL,MAAMC,QAAQI,EAAK,KAEtC,OAAU,SAAAA,GAAI,OAAIA,EAAKK,QAAO,SAACkB,EAAKhB,GAAN,OAAcgB,EAAIhB,IAAK,KACrD,UAAa,SAAAP,GAAI,OAAIA,EAAK,GAAGwB,UAAUxB,EAAK,GAAIA,EAAK,KAErD,QAAW,SAAAA,GAAI,OAAIA,EAAK,GAAGrC,QAAQ,IAAI8D,OAAOzB,EAAK,GAAI,KAAMA,EAAK,KAClE,SAAY,SAAAA,GAAI,OAAIvC,EAASuC,EAAK,KAElC,KAAQ,SAAAA,GAAI,OAAIA,EAAK5B,OAAS4B,EAAK,GAAGK,QAAQ,SAACqB,EAAD,GAAwB,IAAD,mBAAhBvC,EAAgB,KAAXwB,EAAW,KAAoB,OAAlBe,EAAIvC,GAAOwB,EAAce,IAAQ,IAAM,IAC9G,WAAY,SAAA1B,GAAI,OAAIiB,OAAOU,OAAO,GAAI3B,EAAK,GAAvBiB,OAAA,IAAAA,CAAA,GAA6BjB,EAAK,GAAG,GAAKA,EAAK,GAAG,MACtE,WAAY,SAAAA,GAAI,OAAIA,EAAK,GAAGX,eAAeW,EAAK,IAAO,CAACA,EAAK,GAAIA,EAAK,GAAGA,EAAK,KAAQ,IACtF,aAAc,SAAAA,GAAI,OAAIiB,OAAOU,OAAO,GAAI3B,EAAK,GAAIA,EAAK,KAEtD,MAAS,SAAAA,GAAU,MAAM,IAAI4B,MAAM5B,EAAK,KAExC,KAAQ,SAACA,EAAMf,EAAKC,GAAZ,OAA4BQ,EAAcM,EAAK,GAAIf,EAAKC,IAChE,KAAQ,SAACc,EAAMf,GAAP,OAAee,EAAK,IAE5B,SAAY,SAAAA,GAAI,OAAIpC,EAASoC,EAAK,KAClC,MAAS,SAAAA,GAAI,OAAIrB,EAAMqB,EAAK,KAC5B,gBAAiB,SAAAA,GAAI,OAAIN,EAAcM,EAAK,GAAIA,EAAK,GAAIA,EAAK,MC9IjD6B,MAzGf,WAAqB,IAAD,EAE4BC,mBAAS,GAFrC,mBAEXC,EAFW,KAEMC,EAFN,OAGYF,mBAAS,IAHrB,mBAGXG,EAHW,KAGFC,EAHE,OAIoBJ,mBAAS,IAJ7B,mBAIXK,EAJW,KAIEC,EAJF,KAMlBC,qBAAU,WAER,IAAMC,EAAoB,CACxB,mCACA,WACA,gDACA,sBACA,uCAPY,4CAUd,kCAAAlD,EAAA,sDACQmD,EAAc,GACXpE,EAAI,EAFf,YAEkBA,EAAImE,EAAkBlE,QAFxC,wBAGUoE,EAAUF,EAAkBnE,GAHtC,SAI0B+B,EAAUvB,EAAMf,EAAS4E,IAAW,IAJ9D,OAIUC,EAJV,OAImE,GAC/DF,EAAYhE,KAAK,CAACiE,UAASC,OAA0B,oBAAXA,EAAwB,GAAGC,SAASC,KAAKF,GAAUA,EAAOC,aALxG,OAEgDvE,IAFhD,gDAOSoE,GAPT,6CAVc,kEAoBdK,GAAcC,MAAM,SAAAC,GAClBZ,EAAWY,QAEZ,IAGH,IAAIC,EAAcd,EAAQd,KAAK,WAAoBhD,GAAO,IAAzBqE,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OACxC,OAAO,0BAAMtD,IAAKhB,GAChB,uBAAG6E,UAAU,mBAAmB,KAAOR,GACvC,uBAAGS,MAAQ,CAACC,MAAO,SAAYF,UAAU,mBAAmBP,OAQ1DU,EAAG,uCAAG,4BAAA/D,EAAA,yDACiB,IAAvB+C,EAAY/D,OADN,0EAMQ8B,EAAUvB,EAAMf,EAASuE,IAAe,IANhD,OAORiB,EAA2B,oBAD3BA,EANQ,OAMqD,IACrB,GAAGV,SAASC,KAAKS,GAAUA,EAAOV,WAPlE,gDASRU,EAAS,KAAEC,QATH,QAWVnB,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAACO,QAASL,EAAaM,OAAQW,MACvDhB,EAAe,IACfJ,EAAmB,GAbT,yDAAH,qDAiDT,OACE,yBAAKgB,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,cAAhB,KACJ,2BAAOA,UAAU,YAAYrC,MAAOwB,EAAamB,SA1DzB,SAAA5C,GAC1B0B,EAAe1B,EAAE6C,OAAO5C,QAyD0D6C,WAVtD,SAAA9C,GACd,UAAVA,EAAEvB,KACJgE,KAQmHM,UAtC1F,SAAA/C,GAC3B,IAAMgD,EAAWpF,YACf,UAAW,EACX,aAAc,EACd,EAHeA,CAIfoC,EAAEvB,KAKJ,GAHiB,IAAbuE,GACFhD,EAAEiD,iBAEa,IAAbD,EAAgB,CAClB,GAAI3B,EAAgB2B,EAAWzB,EAAQ7D,OACrC,OAEF,GAAI2D,EAAgB2B,GAAY,EAG9B,OAFA1B,EAAmB,QACnBI,EAAe,IAIjBJ,EAAmBD,EAAgB2B,GACnC,IAAME,EAAe3B,EAAQ7D,QAAU2D,EAAgB2B,GACvDtB,EAAeH,EAAQ2B,GAAcpB,SAGvC,OAAO,MAeDO,EAAYc,aC3CPC,MAzDf,WACE,OACE,yBAAKd,UAAU,OACb,iCACE,4BAAI,8CAAJ,kBAEA,6DACA,6BACE,4BACE,4BAAI,uBAAGA,UAAU,WAAWe,KAAK,aAA7B,aAEJ,4BAAI,uBAAGf,UAAU,WAAWe,KAAK,SAA7B,qBAGJ,4BAAI,uBAAGf,UAAU,WAAWe,KAAK,YAA7B,eAIV,iCACE,wBAAIf,UAAU,gBAAgBgB,GAAG,YAAjC,YACA,4BACE,mEAAwC,uBAAGD,KAAK,sCAAR,OAAxC,KACA,gEAAqC,uBAAGA,KAAK,wCAAR,UAArC,KACA,4BAAI,uBAAGA,KAAK,aAAR,kBAQR,iCACE,wBAAIf,UAAU,gBAAgBgB,GAAG,QAAjC,oBACA,kBAAC,EAAD,MACA,6BACA,iEAAsC,uBAAGD,KAAK,iDAAR,WAExC,iCACE,wBAAIf,UAAU,gBAAgBgB,GAAG,WAAjC,WACA,4BACE,4BAAI,uBAAGD,KAAK,+DAAR,aACJ,4BAAI,uBAAGA,KAAK,6BAAR,aASR,gCACE,oDC3CYE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9F,MACvB,2DCZN+F,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9B,MAAK,SAAA+B,GACjCA,EAAaC,iB","file":"static/js/main.c6fd9130.chunk.js","sourcesContent":["import { match } from 'egna';\n\nfunction sanitize(input) {\n  return input.replace(/;.*/g, \" \").replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n}\n\nfunction tokenize(input) {\n\n  const lexemes = [];\n  let lex_builder = \"\";\n  let quote_level = 0;\n  let is_string_literal = false;\n\n  const pop_lex_builder = () => {\n    let b = lex_builder;\n    lex_builder = \"\";\n    return b;\n  };\n\n  for (let i = 0; i < input.length; i++){\n    const c = input[i];\n\n    if (quote_level >= 1) {\n      if (c === \" \" && quote_level <= 1) { //stop quoting if hit space char and below level 1 quoting\n        quote_level = 0;\n      } else if (c === \"(\") {\n        quote_level++;\n      } else if (c === \")\") {\n        quote_level--;\n      }\n      if (quote_level >= 1) {\n        lex_builder += c;\n        continue;\n      }\n    }\n\n    if (is_string_literal) {\n      if (c === \"\\\\\") {\n        lex_builder += input[++i];\n        continue;\n      }\n      if (c === '\"') {\n          is_string_literal = false;\n      }\n      lex_builder += c;\n      continue;\n    }\n\n    match(\n      \"(\", c => lexemes.push(c),\n      \" \", c => (lex_builder.length === 0 ? null : lexemes.push(pop_lex_builder())),\n      \")\", c => [lex_builder.length === 0 ? null : lexemes.push(pop_lex_builder()), lexemes.push(c)],\n      \"'\", c => {\n        quote_level = 1;\n        lex_builder += c;\n      },\n      \"\\\"\", c => {\n        is_string_literal = true;\n        lex_builder += c;\n      },\n      c => { lex_builder += c; }\n    )(c);\n  }\n\n  if (lex_builder.length > 0)\n    lexemes.push(pop_lex_builder());\n  \n  return lexemes;\n}\n\nfunction parse_symbol(s) {\n  if (isNaN(s)) {\n    return match(\n      \"true\", true,\n      \"false\", false,\n      s => s\n    )(s);\n  } else {\n    return +s;\n  }\n}\n\nfunction parse(lexemes) {\n  const ast = [];\n\n  let popout = false;\n  while (lexemes.length > 0 && !popout) {\n    match(\n      \"(\", l => ast.push(parse(lexemes)),\n      \")\", l => { popout = true; },\n      l => ast.push(parse_symbol(l))\n    )(lexemes.shift());\n  }\n  return ast;\n}\n\nasync function lookup(env, level_store, key) {\n  if (env.hasOwnProperty(key)) {\n    return env[key];  \n  } else if (level_store.hasOwnProperty(key)) {\n    return level_store[key];\n  } else {\n    // if (builtins[key] === undefined) throw Error(\"Variable not bound: \" + key);\n    if (builtins[key] === undefined){\n      console.log(\"Variable not bound: \" + key);\n    }\n    return builtins[key];\n  }\n}\n\nasync function interpret_exp(ast, env, level_store) {\n  if (Array.isArray(ast)) {\n    const operator = ast[0];\n    const proc = await lookup(env, level_store, operator);\n    // Special cases for operators that shouldn't have their arguments intepreted immediately.\n    switch (operator) {\n    case \"if\":\n    case \"match\":\n      return proc([await interpret_exp(ast[1], env, level_store), ...ast.slice(2)], env, level_store);\n    case \"let\":\n    case \"lambda\":\n    case \"defun\":\n    case \"fork\":\n      return proc(ast.slice(1), env, level_store);\n    default:\n      const args = ast.slice(1);\n      const results = []; \n      for (let i = 0; i < args.length; i++) {\n        results.push(await interpret_exp(args[i], env, level_store));\n      }\n      return await proc(results, env, level_store);\n    }\n    // TODO: tail call optimization\n  } else {\n    if (typeof ast === \"string\") {\n      if (ast[0] === \"'\") {\n        return ast.slice(1);\n      } else if (ast[0] === \"\\\"\") {\n        return ast.slice(1, ast.length-1);\n      } else {\n        return await lookup(env, level_store, ast);\n      }\n    } else {\n      return ast;\n    }\n  }\n}\n\nasync function interpret(ast, env) {\n\n  const results = [];\n  for (let i = 0; i < ast.length; i++) {\n    let exp = ast[i];\n    results.push(await interpret_exp(exp, env, store));\n  }\n\n  return results;\n}\n\nconst store = {};\n\nconst builtins = {\n  \"+\": args => args.reduce((sum, arg) => arg+sum, 0),\n  \"-\": args => args.length > 1 ? args.slice(1).reduce((sum, arg) => sum-arg, args[0]) : (-args[0]),\n  \"*\": args => args.reduce((sum, arg) => sum*arg, 1),\n  \"/\": args => args.splice(1).reduce((sum, arg) => sum/arg, args[0]),\n  \"eq?\": args => args[0] === args[1],\n  \"<\": args => args[0] < args[1],\n  \">\": args => args[0] > args[1],\n  \"if\": (args, env, level_store) => args[0] ? interpret_exp(args[1], env, level_store) : interpret_exp(args[2], env, level_store),\n  \"not\": args => !args[0],\n  \"cons\": args => (Array.isArray(args[1]) ? [args[0], ...args[1]] : [args[0], args[1]]),\n  \"list\": args => args,\n  \"car\": args => args[0][0],\n  \"cdr\": args => args[0].slice(1),\n  \"length\": args => args[0].length,\n  \"assoc\": args => {\n    const pair = args[1].find(e => e[0] === args[0]);\n    return pair || [];\n  },\n  \"set\": (args, env, level_store) => {\n    level_store[args[0]] = args[1];\n    return args[1];\n  },\n  \"defun\": (args, env, level_store) => { // can be made as a macro expanding to set and lambda combined\n    level_store[args[0]] = builtins[\"lambda\"](args.slice(1), env, level_store);\n    return level_store[args[0]];\n  },\n  \"let\": (args, env, level_store) => {\n    const [key, value] = args[0];\n    env = { ...env, [key]: interpret_exp(value, env, level_store) };\n    return interpret_exp(args[1], env, level_store);\n  },\n  \"lambda\": (args, env, level_store) => {\n    const [params, body_ast] = args;\n    return lam_args => {\n      for (let i = 0; i < params.length; ++i) {\n        env = {...env, [params[i]]: lam_args[i]}; // bind args in env\n      }\n      return interpret_exp(body_ast, env, level_store);\n    };\n  },\n  \"call\": args => args[0](args.splice(1)),\n  \"eval\": (args, env, level_store) => interpret_exp(parse(tokenize(args[0]))[0], env, level_store),\n  \"progn\": args => args[args.length-1],\n  \"print\": args => console.log(args[0]),\n  // \"req\": args => {\n  //   return fetch(args[0])\n  //     .then(res => res.text());\n  // },\n  \"json\": args => {\n    const obj = JSON.parse(args[0]);\n    return Object.keys(obj).map(k => [k, obj[k]]);\n  },\n  // \"read\": args => readNext(args[0]),\n  // \"file\": args => fs.readFileSync(args[0], 'utf8'),\n  \"match\": async (args, env, level_store) => {\n    const val = args[0];\n    for (let i = 1; i < args.length-2; i+=2) {\n      if (val === await interpret_exp(args[i], env, level_store)) {\n        return interpret_exp(args[i+1], env, level_store);\n      }\n    }\n    return interpret_exp(args[args.length-1], env, level_store);\n  },\n  \"slice\": args => args[2].slice(args[0], args[1]),\n  \"append\": args => [...args[0], ...args[1]],\n  \"nth\": args => args[1][args[0]],\n  \"flat-length\": args => args[0].flat().length,\n  \"nil\": [],\n  \"infer-type\": args => parse_symbol(args[0]),\n  \"type\": args => typeof args[0],\n  \"is-list\": args => Array.isArray(args[0]),\n  // String functions\n  \"concat\": args => args.reduce((str, arg) => str+arg, \"\"),\n  \"substring\": args => args[2].substring(args[0], args[1]),\n  // \"includes\": args => args[0].includes(args[1]),\n  \"replace\": args => args[2].replace(new RegExp(args[0], \"g\"), args[1]),\n  \"sanitize\": args => sanitize(args[0]),\n  // Dictionaries, replacement for proper assoc list implementation\n  \"dict\": args => args.length ? args[0].reduce( (acc, [key, value]) => { acc[key] = value; return acc; }, {}) : {},\n  \"put-dict\": args => Object.assign({}, args[1], {[args[0][0]]: args[0][1]}),\n  \"get-dict\": args => args[1].hasOwnProperty(args[0]) ? ([args[0], args[1][args[0]]]) : [],\n  \"merge-dict\": args => Object.assign({}, args[1], args[0]),\n\n  \"throw\": args => { throw new Error(args[0]);},\n  // Concurrency, note: interpret_exp is an async function\n  \"fork\": (args, env, level_store) => interpret_exp(args[0], env, level_store),\n  \"join\": (args, env) => args[0],\n\n  \"tokenize\": args => tokenize(args[0]),\n  \"parse\": args => parse(args[0]),\n  \"interpret-exp\": args => interpret_exp(args[0], args[1], args[2]),\n};\n\n// // Read write stream\n\n// const completes = Object.keys(builtins);\n\n// function completer(linePartial, callback) {\n//   const hits = completes.filter((c) => (\"(\" + c).startsWith(linePartial));\n//   callback(null, [hits, linePartial.substring(1)]);\n// }\n\n// const rl = readline.createInterface(process.stdin, process.stdout, completer).on(\"close\", () => {\n//   console.log(\"\\nkbye!\");\n//   process.exit(0);\n// });\n\n// function readNext(prompt) {\n//   return new Promise( resolve => {\n//     rl.setPrompt(prompt);\n//     rl.removeAllListeners(\"line\");\n//     rl.prompt();\n//     rl.on(\"line\", line => {\n//       if (line.length === 0) {\n//         resolve(\"\");\n//       } else {\n//         resolve(line);\n//       }\n//     });\n//   });\n// }\n\n// async function repl(prompt) {\n//   const line = await readNext(prompt);\n//   if (line)\n//     console.log((await interpret(parse(tokenize(line)), {}))[0]);\n//   repl(prompt);\n// }\n\n// if (require.main === module) {\n//   repl(\"h> \");\n// }\n\nconst run = src => interpret(parse(tokenize(sanitize(src))), {});\nexport {\n  tokenize,\n  parse,\n  interpret,\n  // repl,\n  run \n};","import React, { useState, useEffect } from 'react';\nimport './LispREPL.css';\nimport {tokenize, parse, interpret} from './lisp.js'\nimport {match} from 'egna';\n\nfunction LispREPL() {\n  \n  const [historyNavIndex, setHistoryNavIndex] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [currentLine, setCurrentLine] = useState(\"\");\n\n  useEffect(() => {\n\n    const sampleExpressions = [\n      \"(set 'pow2 (lambda (x) (* x x)))\",\n      \"(pow2 5)\",\n      \"(if (eq? (+ (* 10 2) 20) 400) 'apple 'orange)\",\n      \"(let (k 3) (+ k 6))\",\n      \"(cdr (assoc 'a (list (list 'a 5))))\",\n    ];\n\n    async function sampleInter() {\n      const interpreted = [];\n      for (let i = 0; i < sampleExpressions.length; i++) {\n        const command = sampleExpressions[i];\n        const output = (await interpret(parse(tokenize(command)), {}))[0];\n        interpreted.push({command, output: typeof output === \"function\" ? {}.toString.call(output) : output.toString()});\n      }\n      return interpreted;\n    } \n\n    sampleInter().then( h => {\n      setHistory(h);\n    });\n  }, []);\n  \n  \n  let historyList = history.map( ({command, output}, i) => {\n    return <span key={i}>\n      <p className=\"replHistoryItem\">{\"> \" + command}</p>\n      <p style={ {color: 'green' } } className=\"replHistoryItem\">{output}</p>\n    </span>\n  });\n\n  const onCurrentLineChange = e => {\n    setCurrentLine(e.target.value);\n  };\n\n  const run = async () => {\n    if (currentLine.length === 0)\n      return;\n    \n    let result;\n    try {\n      result = (await interpret(parse(tokenize(currentLine)), {}))[0];\n      result = typeof result === \"function\" ? {}.toString.call(result) : result.toString();\n    } catch (e) {\n      result = e.message;\n    }\n    setHistory([...history, {command: currentLine, output: result}]);\n    setCurrentLine(\"\");\n    setHistoryNavIndex(0);\n  };\n\n  const onCurrentLineKeyDown = e => {\n    const navDelta = match(\n      'ArrowUp', 1,\n      'ArrowDown', -1,\n      0\n    )(e.key);\n\n    if (navDelta !== 0)\n      e.preventDefault();\n\n    if (navDelta !== 0) {\n      if (historyNavIndex+navDelta > history.length)\n        return;\n      \n      if (historyNavIndex+navDelta <= 0) {\n        setHistoryNavIndex(0);\n        setCurrentLine(\"\");\n        return;\n      }\n\n      setHistoryNavIndex(historyNavIndex+navDelta);\n      const commandIndex = history.length - (historyNavIndex+navDelta);\n      setCurrentLine(history[commandIndex].command);\n    }\n\n    return false;\n  };\n\n  const onCurrentLineKeyPress = e => {\n    if (e.key === 'Enter')\n      run();\n  };\n\n  return (\n    <div className=\"LispREPL\">\n      <div className=\"repl\">\n        <div className=\"replInputWrapper\">\n          <span className=\"replPrompt\">&gt;</span>\n      <input className=\"replInput\" value={currentLine} onChange={onCurrentLineChange} onKeyPress={onCurrentLineKeyPress} onKeyDown={onCurrentLineKeyDown} />\n        </div>\n        { historyList.reverse() }\n      </div>\n    </div>\n  );\n}\n\nexport default LispREPL;","import React from 'react';\nimport './App.css';\nimport LispREPL from './LispREPL.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <article>\n        <h1><small>(developer </small>\n          Kristian Hole)</h1>\n        <h2>Consultant at Netlight ☔</h2>\n        <nav>\n          <ul>\n            <li><a className=\"navLinks\" href=\"#projects\">Projects</a></li>\n            {/*<li><a className=\"navLinks\" href=\"#articles\">Articles</a></li>*/}\n            <li><a className=\"navLinks\" href=\"#lisp\">Lisp interpreter</a></li>\n            {/*<li><a className=\"navLinks\" href=\"ppp_webgl\">Tiny Planet</a></li>*/}\n            {/*<li><a className=\"navLinks\" href=\"https://github.com/kahole\">Github</a></li>*/}\n            <li><a className=\"navLinks\" href=\"#contact\">Contact</a></li>\n          </ul>\n        </nav>\n      </article>\n      <article>\n        <h1 className=\"articleHeader\" id=\"projects\">Projects</h1>\n        <ul>\n          <li>Egna - Javascript Pattern Matching (<a href=\"https://www.npmjs.com/package/egna\">NPM</a>)</li>\n          <li>Lisp and Reflective Tower in JS (<a href=\"https://github.com/kahole/lisp_in_js\">Github</a>)</li>\n          <li><a href=\"ppp_webgl\">Tiny Planet</a></li>\n        </ul>\n      </article>\n      {/*<article>\n        <h1 className=\"articleHeader\" id=\"articles\">Articles</h1>\n          Thesis<br/>\n          <a href=\"https://ntnuopen.ntnu.no/ntnu-xmlui/?locale-attribute=en\">An evaluation of join-strategies in a distributed MySQL plugin architecture</a>\n      </article>*/}\n      <article>\n        <h1 className=\"articleHeader\" id=\"lisp\">Lisp interpreter</h1>\n        <LispREPL />\n        <br/>\n        <p>See full list of built-in funtions <a href=\"https://github.com/kahole/lisp_in_js#builtins\">here.</a></p>\n      </article>\n      <article>\n        <h1 className=\"articleHeader\" id=\"contact\">Contact</h1>\n        <ul>\n          <li><a href=\"https://www.linkedin.com/in/kristian-andersen-hole-513421bb\">LinkedIn</a></li>\n          <li><a href=\"https://github.com/kahole\">Github</a></li>\n        </ul>\n      </article>\n      {/*<article>\n        <h1 className=\"articleHeader\" id=\"webgl\">Tiny Planet</h1>\n        <div className=\"webglFrameWrapper\">\n        <iframe className=\"webglFrame\" src=\"ppp_webgl/index.html\"/>\n        </div>\n      </article>*/}\n      <footer>\n        <p>Updated 2019/09/20</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}