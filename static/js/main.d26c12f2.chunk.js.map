{"version":3,"sources":["lisp.js","LispREPL.js","App.js","serviceWorker.js","index.js"],"names":["tokenize","input","replace","lexemes","lex_builder","quote_level","pop_lex_builder","b","c","match","push","length","parse","ast","popout","l","s","isNaN","shift","lookup","env","store","key","hasOwnProperty","undefined","Error","interpret_exp","Array","isArray","operator","proc","_","slice","op","map","a","includes","interpret","exp","args","find","e","value","params","body_ast","lam_args","i","splice","console","log","obj","JSON","Object","keys","k","LispREPL","sampleHistory","forEach","h","command","output","toString","call","useState","historyNavIndex","setHistoryNavIndex","history","setHistory","currentLine","setCurrentLine","historyList","className","style","color","onChange","target","onKeyPress","result","message","run","onKeyUp","navDelta","commandIndex","reverse","App","href","id","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d26c12f2.chunk.js","sourcesContent":["import { match, op } from 'egna';\n\nfunction tokenize(input) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/gm, \" \"); // make all whitespace space characters\n\n  const lexemes = [];\n  let lex_builder = \"\";\n  let quote_level = 0;\n\n  const pop_lex_builder = () => {\n    let b = lex_builder;\n    lex_builder = \"\";\n    return b;\n  };\n\n  for (let c of input) {\n\n    if (quote_level >= 1) {\n      if (c === \" \" && quote_level <= 1) { //stop quoting if hit space char and below level 1 quoting\n        quote_level = 0;\n      } else if (c === \"(\") {\n        quote_level++;\n      } else if (c === \")\") {\n        quote_level--;\n      }\n      if (quote_level >= 1) {\n        lex_builder += c;\n        continue;\n      }\n    }\n    \n    match(\n      \"(\", c => lexemes.push(c),\n      \" \", c => (lex_builder.length === 0 ? null : lexemes.push(pop_lex_builder())),\n      \")\", c => [lex_builder.length === 0 ? null : lexemes.push(pop_lex_builder()), lexemes.push(c)],\n      \"'\", c => {\n        quote_level = 1;\n        lex_builder += c;\n      },\n      c => { lex_builder += c; }\n    )(c);\n  }\n  return lexemes;\n}\n\nfunction parse_symbol(s) {\n  if (isNaN(s)) {\n    return match(\n      \"true\", s => true,\n      \"false\", s => false,\n      s => s\n    )(s);\n  } else {\n    return +s;\n  }\n}\n\nfunction parse(lexemes) {\n  const ast = [];\n\n  let popout = false;\n  while (lexemes.length > 0 && !popout) {\n    match(\n      \"(\", l => ast.push(parse(lexemes)),\n      \")\", l => { popout = true; },\n      l => ast.push(parse_symbol(l))\n    )(lexemes.shift());\n  }\n  return ast;\n}\n\nfunction lookup(env, store, key) {\n  if (env.hasOwnProperty(key)) {\n    return env[key];\n  } else {\n    if (store[key] === undefined) throw Error(\"variable not bound: \" + key);\n    return store[key];\n  }\n}\n\nfunction interpret_exp(ast, env) {\n  if (Array.isArray(ast)) {\n    const operator = ast[0];\n    const proc = lookup(env, store, operator);\n    // Special cases for operators that shouldn't have their arguments intepreted immediately.. TODO: tail call optimization\n    return match(\n      \"if\", _ => proc([interpret_exp(ast[1], env), ...ast.slice(2)], env),\n      op([\"let\", \"lambda\", \"defun\"]), _ => proc(ast.slice(1), env),\n      _ => proc(ast.slice(1).map(a => interpret_exp(a, env)), env)\n    )(operator);\n  } else {\n    if (typeof ast === \"string\") {\n      if (ast.includes(\"'\")) {\n        return parse([ast.slice(1)])[0];\n      } else {\n        return lookup(env, store, ast);\n      }\n    } else {\n      return ast;\n    }\n  }\n}\n\nfunction interpret(ast, env) {\n  return ast.map(exp => interpret_exp(exp, env));\n}\n\nconst store = {\n  \"+\": args => args[0] + args[1],\n  \"-\": args => args[0] - args[1],\n  \"*\": args => args[0] * args[1],\n  \"/\": args => args[0] / args[1],\n  \"eq?\": args => args[0] === args[1],\n  \"if\": (args, env) => args[0] ? interpret_exp(args[1], env) : interpret_exp(args[2], env),\n  \"not\": args => !args[0],\n  \"cons\": args => (args[1] ? [args[0], ...args[1]] : [args[0]]),\n  \"list\": args => args,\n  \"car\": args => args[0][0],\n  \"cdr\": args => args[0][1],\n  \"assoc\": args => args[1].find(e => e[0] === args[0]),\n  \"set\": args => {\n    store[args[0]] = args[1];\n    return args[1];\n  },\n  \"defun\": (args, env) => { // can be made as a macro expanding to set and lambda combined\n    store[args[0]] = store[\"lambda\"](args.slice(1), env);\n    return store[args[0]];\n  },\n  \"let\": (args, env) => {\n    const [key, value] = args[0];\n    env = { ...env, [key]: interpret_exp(value, env) };\n    return interpret_exp(args[1], env);\n  },\n  \"lambda\": (args, env) => {\n    const [params, body_ast] = args;\n    return lam_args => {\n      for (let i = 0; i < params.length; ++i) {\n        env = {...env, [params[i]]: lam_args[i]}; // bind args in env\n      }\n      return interpret_exp(body_ast, env);\n    };\n  },\n  \"call\": args => args[0](args.splice(1)),\n  \"eval\": (args, env) => interpret_exp(parse(tokenize(args[0]))[0], env),\n  \"print\": args => console.log(args[0]),\n  // \"req\": args => {https.get(args[0], res => {\n  //   let body = \"\";\n  //   res.on(\"data\", data => {\n  //     body += data;\n  //   }).on(\"end\", () => args[1]([body]));\n  // })},\n  \"json\": args => {\n    const obj = JSON.parse(args[0]);\n    return Object.keys(obj).map(k => [k, obj[k]]);\n  }\n};\n\nconst run = src => interpret(parse(tokenize(src)), {});\n\nexport {\n  tokenize,\n  parse,\n  interpret,\n  run\n};","import React, { useState } from 'react';\nimport './LispREPL.css';\nimport {tokenize, parse, interpret} from './lisp.js'\nimport {match} from 'egna';\n\nfunction LispREPL() {\n\n  const sampleExpressions = [\n    \"(set 'myFruit 'apple)\",\n    \"(if (not (eq? (+ (* 10 2) 20) 400)) myFruit 'orange)\",\n    \"(set 'pow2 (lambda (x) (* x x)))\",\n    \"(pow2 5)\",\n    \"(let (k 3) (+ k 6))\",\n    \"(cdr (assoc 'a (list (list 'a 5))))\",\n  ];\n\n  const sampleHistory = [];\n\n  sampleExpressions.forEach( h => {\n    const command = h;\n    const output = interpret(parse(tokenize(command)), {})[0];\n    sampleHistory.push({command, output: typeof output === \"function\" ? {}.toString.call(output) : output.toString()});\n  });\n  \n  const [historyNavIndex, setHistoryNavIndex] = useState(0);\n  const [history, setHistory] = useState(sampleHistory);\n  const [currentLine, setCurrentLine] = useState(\"\");\n  \n  let historyList = history.map( ({command, output}, i) => {\n    return <span key={i}>\n      <p className=\"replHistoryItem\">{\"> \" + command}</p>\n      <p style={ {color: 'green' } } className=\"replHistoryItem\">{output}</p>\n    </span>\n  });\n\n  const onCurrentLineChange = e => {\n    setCurrentLine(e.target.value);\n  };\n\n  const run = () => {\n    let result;\n    try {\n      result = interpret(parse(tokenize(currentLine)), {})[0];\n      result = typeof result === \"function\" ? {}.toString.call(result) : result.toString();\n    } catch (e) {\n      result = e.message;\n    }\n    setHistory([...history, {command: currentLine, output: result}]);\n    setCurrentLine(\"\");\n    setHistoryNavIndex(0);\n  };\n\n  const onKeyUp = e => {\n    const navDelta = match(\n      'ArrowUp', () => 1,\n      'ArrowDown', () => -1,\n      _ => 0\n    )(e.key);\n\n\n    if (navDelta !== 0) {\n      if (historyNavIndex+navDelta > history.length)\n        return;\n      \n      if (historyNavIndex+navDelta <= 0) {\n        setHistoryNavIndex(0);\n        setCurrentLine(\"\");\n        return;\n      }\n\n      setHistoryNavIndex(historyNavIndex+navDelta);\n      const commandIndex = history.length - (historyNavIndex+navDelta);\n      setCurrentLine(history[commandIndex].command);\n    }\n  };\n\n  const onCurrentLineKeyPress = e => {\n    if (e.key === 'Enter')\n      run();\n  };\n\n  return (\n    <div className=\"LispREPL\">\n      <div className=\"repl\">\n        <div className=\"replInputWrapper\">\n          <span className=\"replPrompt\">&gt;</span>\n      <input className=\"replInput\" value={currentLine} onChange={onCurrentLineChange} onKeyPress={onCurrentLineKeyPress} onKeyUp={onKeyUp} />\n        </div>\n        { historyList.reverse() }\n      </div>\n    </div>\n  );\n}\n\nexport default LispREPL;","import React from 'react';\nimport './App.css';\nimport LispREPL from './LispREPL.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <article>\n        <h1><small>(developer</small>\n          Kristian Hole)</h1>\n        <h2>Consultant at Netlight ☔</h2>\n        <nav>\n          <ul>\n            <li><a className=\"navLinks\" href=\"#projects\">Projects</a></li>\n            {/*<li><a className=\"navLinks\" href=\"#articles\">Articles</a></li>*/}\n            <li><a className=\"navLinks\" href=\"#lisp\">Lisp interpreter</a></li>\n            <li><a className=\"navLinks\" href=\"ppp_webgl\">Tiny Planet</a></li>\n            <li><a className=\"navLinks\" href=\"https://github.com/kahole\">Github</a></li>\n          </ul>\n        </nav>\n      </article>\n      <article>\n        <h1 className=\"articleHeader\" id=\"projects\">Projects</h1>\n        <ul>\n          <li>Egna - Javascript Pattern Matching (<a href=\"https://www.npmjs.com/package/egna\">on NPM</a>)</li>\n          <li>Lisp-in-js (<a href=\"https://github.com/kahole/lisp_in_js\">Github</a>)</li>\n        </ul>\n      </article>\n      {/*<article>\n        <h1 className=\"articleHeader\" id=\"articles\">Articles</h1>\n          Thesis<br/>\n          <a href=\"https://ntnuopen.ntnu.no/ntnu-xmlui/?locale-attribute=en\">An evaluation of join-strategies in a distributed MySQL plugin architecture</a>\n      </article>*/}\n      <article>\n        <h1 className=\"articleHeader\" id=\"lisp\">Lisp interpreter</h1>\n        <LispREPL />\n        <br/>\n        <p>See full list of built-in funtions <a href=\"https://github.com/kahole/lisp_in_js\">here.</a></p>\n      </article>\n      {/*<article>\n        <h1 className=\"articleHeader\" id=\"webgl\">Tiny Planet</h1>\n        <div className=\"webglFrameWrapper\">\n        <iframe className=\"webglFrame\" src=\"ppp_webgl/index.html\"/>\n        </div>\n      </article>*/}\n      <footer>\n        <p>Updated 2019/09/08</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}