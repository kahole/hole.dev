{"version":3,"sources":["../node_modules/peerjs/dist sync","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","uuids","obfuscate","index","questions","help","content","practice","App","className","path","component","Presentation","Participant","useState","answers","setAnswers","setId","connections","setConnections","useEffect","peer","Peer","on","conn","c","data","console","log","m","questionNr","payload","answer","username","error","arr","Object","map","k","onClick","message","type","forEach","send","a","i","Math","random","gameId","useParams","localStorage","getItem","connectId","setConnectId","setUsername","connection","setConnection","connect","reliable","useRef","usernameRef","useHistory","render","props","Game","GoToQuestionOne","onSubmit","event","preventDefault","current","value","setItem","style","textAlign","width","paddingRight","margin","ref","paddingTop","fontSize","push","questionId","indexOf","results","setResults","endResult","setEndResult","history","GameOver","Question","onAnswer","answerField","hasAnswered","setHasAnswered","Result","color","length","toLowerCase","placeholder","currentResults","wordCloudData","userAnswers","oldEntry","find","word","text","options","deterministic","fontSizes","words","key","points","questionResult","topAnswer","reduce","prev","filter","correct","sortedPointList","name","sort","p1","p2","alt","src","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c3e94ed.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 64;","import './App.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { HashRouter as Router, Switch, Route, useParams, useHistory } from \"react-router-dom\";\nimport ReactWordcloud from 'react-wordcloud';\nimport Peer from 'peerjs';\n\nconst uuids = [\"0581a92a\", \"b70d9088\", \"07751480\", \"8fea7942\", \"1732290d\", \"ab55a518\", \"ac364672\", \"9fe2da3e\", \"b7fd335a\", \"f5c48047\", \"9876fa5a\", \"a5f5e4ff\", \"cc880b12\", \"0f7ad380\", \"7136676e\", \"27a28b35\", \"bcea31bf\", \"a432b34d\", \"6322b623\", \"97f168b3\", \"aaa168b3\"];\n\nconst deobfuscate = (id) => uuids.indexOf(id);\nconst obfuscate = (index) => uuids[index];\n\nconst questions = [\n  { help: 'Practice question (no points)', content: 'What\\'s your favorite color?', practice: true },\n  { help: '', content: 'Who\\'s the funniest character on Friends?' },\n  { help: 'yes or no', content: 'Can you see the great wall of China from space?' },\n  { help: 'yes or no', content: 'Will Tix (Norway) win Eurovision this weekend?' },\n  { help: 'Fill in the missing adjective', content: '\"Power\" is a _____ electronics store' },\n  { help: 'yes or no', content: 'Is aloe vera edible?' },\n  { help: '', content: 'Name programming language that isn\\'t C#:' },\n  { help: '', content: 'Name a character from Game of Thrones:' },\n  { help: 'yes or no', content: 'What\\'s the best mushroom?' },\n  { help: 'Fill in the missing adjective', content: 'Norway is a _____ country' },\n  { help: 'Fill in the missing adjective', content: 'Functions apps are a _____ concept' },\n  { help: 'yes or no', content: 'Was Napoleon a short man?' },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/present\" component={Presentation} />\n          <Route path=\"/:gameId\" component={Participant} />\n          <Route component={Participant} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Presentation() {\n\n  let [answers, setAnswers] = useState({});\n  let [id, setId] = useState('');\n\n  let [connections, setConnections] = useState([]);\n\n  useEffect(() => {\n    const peer = new Peer();\n\n    peer.on('open', function (id) {\n      setId(id);\n\n      peer.on('connection', (conn) => {\n        setConnections(c => [...c, conn]);\n\n        conn.on('open', function (data) {\n          conn.on('data', (data) => {\n            console.log(data);\n\n            setAnswers(m => {\n\n              let questionNr = data.payload.questionNr;\n              let answer = { username: data.username, answer: data.payload.answer, questionNr: data.payload.questionNr };\n\n              if (m[questionNr]) {\n                return { ...m, [questionNr]: [...m[questionNr], answer] };\n              } else {\n                return { ...m, [questionNr]: [answer] };\n              }\n            });\n          });\n          conn.on('error', (error) => {\n            console.log(error);\n          });\n        });\n      });\n\n      peer.on('error', (conn) => {\n        console.log(conn);\n      });\n    });\n\n    return () => { };\n  }, [setAnswers, setId, setConnections]);\n\n  const nextQuestion = () => {\n\n    let message = { type: 'next' };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  const pushResults = () => {\n\n    let arr = Object.keys(answers).map(function (k) { return answers[k] });\n    let message = { type: 'results', payload: arr };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  const endGame = () => {\n\n    let arr = Object.keys(answers).map(function (k) { return answers[k] });\n    let message = { type: 'endgame', payload: arr };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  let arr = Object.keys(answers).map(function (k) { return answers[k] });\n\n  return <>\n    <h1>Presentation</h1>\n    <p>{id}</p>\n    <button className=\"pushy__btn pushy__btn--green\" onClick={nextQuestion}>Next question</button><br /><br />\n    <button className=\"pushy__btn pushy__btn--green\" onClick={pushResults}>Push results</button><br /><br />\n    <button className=\"pushy__btn pushy__btn--green\" onClick={endGame}>End game</button><br />\n    {arr.map((a, i) =>\n      <div key={i + \"\" + Math.random()}>\n        <br />\n        <h5>{questions[i].content}</h5>\n        {a.map(m => <p key={m.username + \"presmap\"}>{m.username} - {m.answer}</p>)}\n      </div>\n    )\n    }\n  </>;\n}\n\nfunction Participant() {\n\n  let { gameId } = useParams();\n\n  let [connectId, setConnectId] = useState(localStorage.getItem(\"fika_game_code\"));\n  let [username, setUsername] = useState(localStorage.getItem(\"fika_name\"));\n\n  let [connection, setConnection] = useState(null);\n\n  useEffect(() => {\n\n    if (connectId) {\n\n      const peer = new Peer();\n\n      peer.on('open', function (id) {\n        const conn = peer.connect(connectId, { reliable: true });\n        conn.on('open', () => {\n          setConnection(conn);\n        });\n      });\n      return () => { };\n    }\n  }, [connectId, setConnection]);\n\n  const idRef = useRef(null);\n  const usernameRef = useRef(null);\n\n  const history = useHistory();\n\n  const onClick = (event) => {\n    event.preventDefault();\n\n    // if (idRef.current.value === 'present123') {\n    //   history.push('/present');\n    //   return;\n    // }\n\n    if (usernameRef) {\n\n      let connectId = gameId;\n      let username = usernameRef.current.value;\n\n      localStorage.setItem(\"fika_game_code\", connectId);\n      localStorage.setItem(\"fika_name\", username);\n\n      setConnectId(connectId);\n      setUsername(username);\n    }\n  };\n\n  if (!connection) {\n\n    return <>\n      <h1>Fredagsfika!</h1><br />\n      <form onSubmit={onClick}>\n        <div style={{ textAlign: \"right\", width: \"17em\", paddingRight: \"4.5em\", margin: \"auto\" }}>\n          {/* Game code <input type=\"text\" defaultValue={gameId} ref={idRef}></input> <br /><br /> */}\n    Username <input type=\"text\" ref={usernameRef}></input> <br /><br />\n        </div>\n        <button className=\"pushy__btn pushy__btn--green\" type=\"submit\">Join</button><br />\n      </form>\n      <div style={{ paddingTop: \"80px\", fontSize: \"1.1em\" }}>\n        <p>\n          The aim of the game is to answer each question with the same answer as most of the group.\n        </p>\n        <p>\n          For a given question, if your answer is the most common answer in the group (a plurality) you get 1 point.\n      </p>\n        <p>\n          You are not allowed to discuss the question during the answering period. (30 seconds per question)\n      </p>\n      </div>\n    </>;\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/question/:questionId\" render={(props) => <Game connection={connection} username={username} />} />\n      <Route component={GoToQuestionOne} />\n    </Switch>\n  );\n}\n\nfunction GoToQuestionOne() {\n  let history = useHistory();\n  history.push(\"/question/\" + obfuscate(0));\n  return <p>\"Loading...\"</p>;\n}\n\nfunction Game({ connection, username }) {\n\n  let { questionId } = useParams();\n  let questionNr = deobfuscate(questionId);\n\n  let [results, setResults] = useState([]);\n  let [endResult, setEndResult] = useState(null);\n  let history = useHistory();\n\n  useEffect(() => {\n\n    connection.on('data', function (data) {\n      console.log('Received', data);\n\n      switch (data.type) {\n        case 'next':\n          history.push('/question/' + obfuscate((questionNr + 1)));\n          break;\n        case 'results':\n          setResults(data.payload);\n          break;\n        case 'endgame':\n          setEndResult(data.payload);\n          break;\n        default:\n          break;\n      }\n    });\n\n    connection.on('error', (conn) => {\n      console.log(conn);\n    });\n\n  });\n\n  const onAnswer = (answer) => {\n    connection.send(\n      {\n        type: 'answer',\n        username: username,\n        payload: answer\n      }\n    );\n  };\n\n  if (endResult) {\n    return <GameOver results={endResult} />;\n  }\n\n  return <Question key={questionNr} onAnswer={onAnswer} questionNr={questionNr} results={results} />;\n}\n\nfunction Question({ results, questionNr, onAnswer }) {\n\n  let answerField = useRef(null);\n\n  let [hasAnswered, setHasAnswered] = useState(false);\n\n  const answer = (event) => {\n    event.preventDefault();\n\n    if (answerField.current.value.length > 0) {\n\n      setHasAnswered(true);\n\n      onAnswer({\n        questionNr: questionNr,\n        answer: answerField.current.value.toLowerCase()\n      });\n    }\n  };\n\n  if (results[questionNr]) {\n    return <Result results={results} questionNr={questionNr} />\n  }\n\n  if (hasAnswered) {\n    return <h2><br />Answer sent! <br /><br />Please wait...</h2>;\n  }\n\n  return (\n    <>\n      <h2 style={{ color: \"rgb(61, 190, 190)\", paddingTop: \"100px\" }}>{questions[questionNr].help}</h2>\n      <h1>{questions[questionNr].content}</h1><br />\n      <form onSubmit={answer}>\n        <input type=\"text\" ref={answerField} placeholder=\"Answer\" /> <br /><br />\n        <button className=\"pushy__btn pushy__btn--green\" type=\"submit\">Submit</button>\n      </form>\n    </>)\n    ;\n}\n\nfunction Result({ results, questionNr }) {\n\n  if (!results[questionNr])\n    return null;\n\n  let currentResults = results[questionNr];\n  let wordCloudData = [];\n  let userAnswers = {};\n\n  currentResults.forEach(answer => {\n\n    // User answers\n    userAnswers[answer.username] = answer.answer;\n\n    // Word cloud\n    let oldEntry = wordCloudData.find(word => word.text.toLowerCase() === answer.answer);\n\n    if (oldEntry) {\n      oldEntry.value += 1;\n    } else {\n      wordCloudData.push({ text: answer.answer.toLowerCase(), value: 1 });\n    }\n  });\n\n  return <>\n    <h1>{questions[questionNr].content}</h1>\n    <h2>Results</h2>\n    <ReactWordcloud\n      options={{\n        deterministic: true,\n        fontSizes: [44, 70]\n      }}\n      words={wordCloudData}\n    />\n\n    <br /><br />\n    <div>\n      {Object.keys(userAnswers).map((key) => <p key={key + \"useranswer\"}>{key} - {userAnswers[key]}</p>)}\n    </div>\n  </>;\n}\n\nfunction GameOver({ results }) {\n\n  let points = {};\n\n  results.forEach(questionResult => {\n    questionResult.forEach(answer => {\n      points[answer.username] = 0;\n    });\n  });\n\n  results.forEach(questionResult => {\n\n    let wordCloudData = [];\n    questionResult.forEach(answer => {\n\n      let oldEntry = wordCloudData.find(word => word.text.toLowerCase() === answer.answer);\n\n      if (oldEntry) {\n        oldEntry.value += 1;\n      } else {\n        wordCloudData.push({ text: answer.answer.toLowerCase(), value: 1 });\n      }\n    });\n\n    const topAnswer = wordCloudData.reduce(function (prev, current) {\n      return (prev.value > current.value) ? prev : current\n    });\n\n    let allTopAnswers = wordCloudData.filter(word => word.value === topAnswer.value);\n\n    allTopAnswers.forEach(topAnswer => {\n      let correctAnswers = questionResult.filter(answer => answer.answer.toLowerCase() === topAnswer.text.toLowerCase());\n\n      correctAnswers.forEach(correct => {\n        if (!questions[correct.questionNr].practice) {\n          points[correct.username]++;\n        }\n      })\n    });\n  });\n\n  let pointsList = Object.keys(points).map(function (k) { return { name: k, points: points[k] } });\n\n  let sortedPointList = pointsList.sort((p1, p2) => p2.points - p1.points);\n\n  return (\n    <>\n      <img alt=\"b\" src=\"https://media3.giphy.com/media/QMkPpxPDYY0fu/giphy.gif?cid=ecf05e47iu1o394khd8975uaxekfw1pmouqlvsfadgdcqz9m&rid=giphy.gif\"></img>\n      <h1 style={{ color: \"rgb(168, 240, 24)\" }}>Final results</h1>\n      <div style={{ width: \"40%\", margin: \"auto\" }}>\n        <ol>\n          {sortedPointList.map((p, i) => <li key={p.name + \"points\"}><h2>{p.name}  -  {p.points} pts</h2></li>)}\n        </ol>\n      </div>\n    </>);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Snowfall from 'react-snowfall';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Snowfall /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}