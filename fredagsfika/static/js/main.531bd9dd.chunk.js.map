{"version":3,"sources":["../node_modules/peerjs/dist sync","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","qObfuscator","questions","help","content","practice","App","className","path","component","Presentation","Participant","useState","answers","setAnswers","setId","connections","setConnections","useEffect","peer","Peer","on","conn","c","data","console","log","m","questionNr","payload","answer","username","error","arr","Object","map","k","onClick","message","type","forEach","send","a","i","Math","random","localStorage","getItem","connectId","setConnectId","setUsername","connection","setConnection","connect","idRef","useRef","usernameRef","history","useHistory","render","props","Game","GoToQuestionOne","onSubmit","event","preventDefault","current","value","setItem","push","style","textAlign","width","paddingRight","margin","ref","paddingTop","fontSize","questionId","useParams","indexOf","results","setResults","endResult","setEndResult","GameOver","Question","onAnswer","answerField","hasAnswered","setHasAnswered","Result","color","length","toLowerCase","placeholder","currentResults","wordCloudData","userAnswers","oldEntry","find","word","text","options","deterministic","fontSizes","words","key","points","questionResult","topAnswer","reduce","prev","filter","correct","sortedPointList","name","sort","p1","p2","alt","src","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.531bd9dd.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 62;","import './App.css';\nimport { useEffect, useState, useRef } from 'react';\n\nimport ReactWordcloud from 'react-wordcloud';\nimport Peer from 'peerjs';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useParams,\n  useHistory\n} from \"react-router-dom\";\n\n\nlet qObfuscator = [\n  \"0581a92a\",\n  \"b70d9088\",\n  \"07751480\",\n  \"8fea7942\",\n  \"1732290d\",\n  \"ab55a518\",\n  \"ac364672\",\n  \"9fe2da3e\",\n  \"b7fd335a\",\n  \"f5c48047\",\n  \"9876fa5a\",\n  \"a5f5e4ff\",\n  \"cc880b12\",\n  \"0f7ad380\",\n  \"7136676e\",\n  \"27a28b35\",\n  \"bcea31bf\",\n  \"a432b34d\",\n  \"6322b623\",\n  \"97f168b3\",\n];\n\nconst getQuestionIndex = (id) => qObfuscator.indexOf(id);\n\nconst questions = [\n  { help: 'Practice question (no points)', content: 'What\\'s your favorite color?', practice: true },\n  { help: '', content: 'Name a nice city:' },\n  { help: '', content: 'Name programming language that isn\\'t C#:' },\n  { help: '', content: 'What\\'s the best football team in the world?' },\n  { help: 'yes or no', content: 'Are we descended from chimpanzees?' },\n  { help: 'yes or no', content: 'Can sharks get cancer?' },\n  { help: 'yes or no', content: 'Can you see the great wall of China from space?' },\n  { help: 'yes or no', content: 'Is one side of the moon always dark?' },\n  { help: 'Fill in the missing adjective', content: 'C++ is a _____ programming language' },\n  { help: 'Fill in the missing adjective', content: 'Pineapple is _____ on pizza' },\n  { help: 'Fill in the missing adjective', content: 'Sweden is a _____ country' },\n  { help: 'Fill in the missing adjective', content: 'Norway is a _____ country' },\n  { help: 'Fill in the missing adjective', content: '\"Power\" is a _____ electronics store' },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Router basename=\"/fredagsfika\"> */}\n      <Router>\n        <Switch>\n          <Route path=\"/present\" component={Presentation} />\n          <Route component={Participant} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Presentation() {\n\n  let [answers, setAnswers] = useState({});\n  let [id, setId] = useState('');\n\n  let [connections, setConnections] = useState([]);\n\n  useEffect(() => {\n    const peer = new Peer();\n\n    peer.on('open', function (id) {\n      setId(id);\n\n      peer.on('connection', (conn) => {\n        setConnections(c => [...c, conn]);\n\n        conn.on('open', function (data) {\n          conn.on('data', (data) => {\n            console.log(data);\n\n            setAnswers(m => {\n\n              let questionNr = data.payload.questionNr;\n              let answer = { username: data.username, answer: data.payload.answer, questionNr: data.payload.questionNr };\n\n              if (m[questionNr]) {\n                return { ...m, [questionNr]: [...m[questionNr], answer] };\n              } else {\n                return { ...m, [questionNr]: [answer] };\n              }\n            });\n          });\n          conn.on('error', (error) => {\n            console.log(error);\n          });\n        });\n      });\n\n      peer.on('error', (conn) => {\n        console.log(conn);\n      });\n    });\n\n    return () => { };\n  }, [setAnswers, setId, setConnections]);\n\n  const nextQuestion = () => {\n\n    let message = { type: 'next' };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  const pushResults = () => {\n\n    let arr = Object.keys(answers).map(function (k) { return answers[k] });\n    let message = { type: 'results', payload: arr };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  const endGame = () => {\n\n    let arr = Object.keys(answers).map(function (k) { return answers[k] });\n    let message = { type: 'endgame', payload: arr };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  let arr = Object.keys(answers).map(function (k) { return answers[k] });\n\n  return <>\n    <h1>Presentation</h1>\n    <p>{id}</p>\n    <button onClick={nextQuestion}>Next question</button><br /><br />\n    <button onClick={pushResults}>Push results</button><br /><br />\n    <button onClick={endGame}>End game</button><br />\n    {arr.map((a, i) =>\n      <div key={i + \"\" + Math.random()}>\n        <br />\n        <h5>{questions[i].content}</h5>\n        {a.map(m => <p key={m.username + \"presmap\"}>{m.username} - {m.answer}</p>)}\n      </div>\n    )\n    }\n  </>;\n}\n\nfunction Participant() {\n\n  let [connectId, setConnectId] = useState(localStorage.getItem(\"fika_game_code\"));\n  let [username, setUsername] = useState(localStorage.getItem(\"fika_name\"));\n\n  let [connection, setConnection] = useState(null);\n\n  useEffect(() => {\n\n    if (connectId) {\n\n      const peer = new Peer();\n\n      peer.on('open', function (id) {\n        const conn = peer.connect(connectId);\n        conn.on('open', () => {\n          setConnection(conn);\n        });\n      });\n\n      return () => {\n\n      };\n    }\n  }, [connectId, setConnection]);\n\n  const idRef = useRef(null);\n  const usernameRef = useRef(null);\n\n  const history = useHistory();\n\n  const onClick = (event) => {\n    event.preventDefault();\n\n    if (idRef.current.value === 'present123') {\n      history.push('/present');\n      return;\n    }\n\n    if (idRef && usernameRef) {\n\n      let connectId = idRef.current.value;\n      let username = usernameRef.current.value;\n\n      localStorage.setItem(\"fika_game_code\", connectId);\n      localStorage.setItem(\"fika_name\", username);\n\n      setConnectId(connectId);\n      setUsername(username);\n    }\n  };\n\n  if (!connection) {\n\n    return <>\n      <h1>Fredagsfika!</h1><br />\n      <form onSubmit={onClick}>\n        <div style={{ textAlign: \"right\", width: \"17em\", paddingRight: \"4.5em\", margin: \"auto\" }}>\n          Game code <input type=\"text\" ref={idRef}></input> <br /><br />\n    Username <input type=\"text\" ref={usernameRef}></input> <br /><br />\n        </div>\n        <button type=\"submit\">Join</button><br />\n      </form>\n      <div style={{ paddingTop: \"80px\", fontSize: \"1.1em\" }}>\n        <p>\n          The aim of the game is to answer each question with the same answer as the rest of the group.\n        </p>\n        <p>\n          For a given question, if your answer is the most common answer in the group (a plurality) you get 1 point.\n      </p>\n        <p>\n          You are not allowed to discuss the question during the answering period. (30 seconds per question)\n      </p>\n      </div>\n    </>;\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/question/:questionId\" render={(props) => <Game connection={connection} username={username} />} />\n      <Route component={GoToQuestionOne} />\n    </Switch>\n  );\n}\n\nfunction GoToQuestionOne() {\n  let history = useHistory();\n  history.push(\"/question/\" + qObfuscator[0]);\n  return <p>\"Loading...\"</p>;\n}\n\nfunction Game({ connection, username }) {\n\n  let { questionId } = useParams();\n\n  let questionNr = getQuestionIndex(questionId);\n\n  let history = useHistory();\n\n  let [results, setResults] = useState([]);\n  let [endResult, setEndResult] = useState(null);\n\n  useEffect(() => {\n\n    connection.on('data', function (data) {\n      console.log('Received', data);\n\n      switch (data.type) {\n        case 'next':\n          history.push('/question/' + qObfuscator[(questionNr + 1)]);\n          break;\n        case 'results':\n          setResults(data.payload);\n          break;\n        case 'endgame':\n          setEndResult(data.payload);\n          break;\n        default:\n          break;\n      }\n    });\n\n    connection.on('error', (conn) => {\n      console.log(conn);\n    });\n\n  });\n\n  const onAnswer = (answer) => {\n    connection.send(\n      {\n        type: 'answer',\n        username: username,\n        payload: answer\n      }\n    );\n  };\n\n  if (endResult) {\n    return <GameOver results={endResult} />;\n  }\n\n  return <Question key={questionNr} onAnswer={onAnswer} questionNr={questionNr} results={results} />;\n}\n\nfunction Question({ results, questionNr, onAnswer }) {\n\n  let answerField = useRef(null);\n\n  let [hasAnswered, setHasAnswered] = useState(false);\n\n  const answer = (event) => {\n    event.preventDefault();\n\n    if (answerField.current.value.length > 0) {\n\n      setHasAnswered(true);\n\n      onAnswer({\n        questionNr: questionNr,\n        answer: answerField.current.value.toLowerCase()\n      });\n    }\n  };\n\n  if (results[questionNr]) {\n    return <Result results={results} questionNr={questionNr} />\n  }\n\n  if (hasAnswered) {\n    return <h2><br />Answer sent! <br /><br />Please wait...</h2>;\n  }\n\n  return (\n    <>\n      <h2 style={{ color: \"blue\" }}>{questions[questionNr].help}</h2>\n      <h1>{questions[questionNr].content}</h1><br />\n      <form onSubmit={answer}>\n        <input type=\"text\" ref={answerField} placeholder=\"Answer\" /> <br /><br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>)\n    ;\n}\n\nfunction Result({ results, questionNr }) {\n\n  if (!results[questionNr])\n    return null;\n\n  let currentResults = results[questionNr];\n\n  let wordCloudData = [];\n\n  let userAnswers = {};\n\n  currentResults.forEach(answer => {\n\n    // User answers\n    userAnswers[answer.username] = answer.answer;\n\n    // Word cloud\n\n    let oldEntry = wordCloudData.find(word => word.text.toLowerCase() === answer.answer);\n\n    if (oldEntry) {\n      oldEntry.value += 1;\n    } else {\n      wordCloudData.push({ text: answer.answer.toLowerCase(), value: 1 });\n    }\n  });\n\n  return <>\n    <h1>{questions[questionNr].content}</h1>\n    <h2>Results</h2>\n    <ReactWordcloud\n      options={{\n        deterministic: true,\n        fontSizes: [44, 70]\n      }}\n      words={wordCloudData}\n    />\n\n    <br /><br />\n    <div>\n      {Object.keys(userAnswers).map((key) => <p key={key + \"useranswer\"}>{key} - {userAnswers[key]}</p>)}\n    </div>\n  </>;\n}\n\nfunction GameOver({ results }) {\n\n  let points = {};\n\n  results.forEach(questionResult => {\n    questionResult.forEach(answer => {\n      points[answer.username] = 0;\n    });\n  });\n\n  results.forEach(questionResult => {\n\n    let wordCloudData = [];\n    questionResult.forEach(answer => {\n\n      let oldEntry = wordCloudData.find(word => word.text.toLowerCase() === answer.answer);\n\n      if (oldEntry) {\n        oldEntry.value += 1;\n      } else {\n        wordCloudData.push({ text: answer.answer.toLowerCase(), value: 1 });\n      }\n    });\n\n    const topAnswer = wordCloudData.reduce(function (prev, current) {\n      return (prev.value > current.value) ? prev : current\n    });\n\n    let allTopAnswers = wordCloudData.filter(word => word.value === topAnswer.value);\n\n    allTopAnswers.forEach(topAnswer => {\n      let correctAnswers = questionResult.filter(answer => answer.answer.toLowerCase() === topAnswer.text.toLowerCase());\n\n      correctAnswers.forEach(correct => {\n        if (!questions[correct.questionNr].practice) {\n          points[correct.username]++;\n        }\n      })\n    });\n  });\n\n  let pointsList = Object.keys(points).map(function (k) { return { name: k, points: points[k] } });\n\n  let sortedPointList = pointsList.sort((p1, p2) => p2.points - p1.points);\n\n  return (\n    <>\n      <img alt=\"b\" src=\"https://media3.giphy.com/media/QMkPpxPDYY0fu/giphy.gif?cid=ecf05e47iu1o394khd8975uaxekfw1pmouqlvsfadgdcqz9m&rid=giphy.gif\"></img>\n      <h1 style={{ color: \"green\" }}>Final results</h1>\n      <div style={{ width: \"40%\", margin: \"auto\" }}>\n        <ol>\n          {sortedPointList.map((p, i) => <li key={p.name + \"points\"}><h2>{p.name}  -  {p.points} pts</h2></li>)}\n        </ol>\n      </div>\n    </>);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}