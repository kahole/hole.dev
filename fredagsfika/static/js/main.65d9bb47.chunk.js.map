{"version":3,"sources":["../node_modules/peerjs/dist sync","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","questions","App","content","window","location","pathname","includes","Presentation","Participant","className","useState","answers","setAnswers","setId","connections","setConnections","useEffect","peer","Peer","on","conn","c","data","console","log","m","questionNr","payload","answer","username","error","arr","Object","map","k","onClick","message","type","forEach","send","a","i","Math","random","connectId","setConnectId","setUsername","connection","setConnection","connect","idRef","useRef","usernameRef","path","render","props","Game","component","GoToQuestionOne","onSubmit","event","preventDefault","current","value","ref","useHistory","push","useParams","history","results","setResults","endResult","setEndResult","parseInt","GameOver","Question","onAnswer","answerField","hasAnswered","setHasAnswered","Result","toLowerCase","currentResults","wordCloudData","userAnswers","oldEntry","find","word","text","options","deterministic","fontSizes","words","key","points","questionResult","topAnswer","reduce","prev","filter","correct","sortedPointList","name","sort","p1","p2","style","width","margin","p","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65d9bb47.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 62;","import './App.css';\nimport { useEffect, useState, useRef } from 'react';\n\nimport ReactWordcloud from 'react-wordcloud';\nimport Peer from 'peerjs';\n\n\n// Game.js\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams,\n  useHistory\n} from \"react-router-dom\";\n\n\n\nconst questions = [\n  'What\\'s your favorite color?',\n  'Was Napolean short?',\n  'Question 3'\n];\n\n\nfunction App() {\n\n  let content = null;\n\n  if (window.location.pathname.includes('presentation')) {\n    content = <Presentation />;\n  } else {\n    content = <Participant />;\n  }\n\n  return (\n    <div className=\"App\">\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Presentation() {\n\n  let [answers, setAnswers] = useState({});\n  let [id, setId] = useState('');\n\n  let [connections, setConnections] = useState([]);\n\n  useEffect(() => {\n    const peer = new Peer();\n\n    peer.on('open', function (id) {\n      setId(id);\n\n      peer.on('connection', (conn) => {\n        setConnections(c => [...c, conn]);\n\n        conn.on('open', function (data) {\n          conn.on('data', (data) => {\n            console.log(data);\n\n            setAnswers(m => {\n\n              let questionNr = data.payload.questionNr;\n              let answer = { username: data.username, answer: data.payload.answer, questionNr: data.payload.questionNr };\n\n              if (m[questionNr]) {\n                return { ...m, [questionNr]: [...m[questionNr], answer] };\n              } else {\n                return { ...m, [questionNr]: [answer] };\n              }\n            });\n          });\n          conn.on('error', (error) => {\n            console.log(error);\n          });\n        });\n      });\n\n      peer.on('error', (conn) => {\n        console.log(conn);\n      });\n    });\n\n    return () => { };\n  }, [setAnswers, setId, setConnections]);\n\n  const nextQuestion = () => {\n\n    let message = { type: 'next' };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  const pushResults = () => {\n\n    let arr = Object.keys(answers).map(function (k) { return answers[k] });\n    let message = { type: 'results', payload: arr };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  const endGame = () => {\n\n    let arr = Object.keys(answers).map(function (k) { return answers[k] });\n    let message = { type: 'endgame', payload: arr };\n\n    connections.forEach(c => {\n      c.send(message);\n    });\n  };\n\n  let arr = Object.keys(answers).map(function (k) { return answers[k] });\n\n  return <>\n    <h1>Presentation</h1>\n    <p>{id}</p>\n    <button onClick={nextQuestion}>Next question</button><br /><br />\n    <button onClick={pushResults}>Push results</button><br /><br />\n    <button onClick={endGame}>End game</button><br />\n    {arr.map((a, i) =>\n      <div key={i + \"\" + Math.random()}>\n        <br />\n        <h5>{questions[i]}</h5>\n        {a.map(m => <p key={m.username + \"presmap\"}>{m.username} - {m.answer}</p>)}\n      </div>\n    )\n    }\n  </>;\n}\n\nfunction Participant() {\n\n  let [connectId, setConnectId] = useState(null);\n  let [username, setUsername] = useState('');\n\n\n  let [connection, setConnection] = useState(null);\n\n  useEffect(() => {\n\n    if (connectId) {\n\n      const peer = new Peer();\n\n      peer.on('open', function (id) {\n\n        const conn = peer.connect(connectId);\n\n        conn.on('open', () => {\n\n          setConnection(conn);\n        });\n\n      });\n\n      return () => {\n\n      };\n    }\n  }, [connectId, setConnection]);\n\n  const idRef = useRef(null);\n  const usernameRef = useRef(null);\n\n  const onClick = (event) => {\n    event.preventDefault();\n    setConnectId(idRef.current.value);\n    setUsername(usernameRef.current.value);\n  };\n\n  if (!connection) {\n\n    return <>\n      <h1>Fredagsfika!</h1>\n      <form onSubmit={onClick}>\n        Game code <input type=\"text\" ref={idRef}></input> <br /><br />\n    Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type=\"text\" ref={usernameRef}></input> <br /><br />\n        <button type=\"submit\">Join</button><br />\n      </form>\n    </>;\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/question/:questionNr\" render={(props) => <Game connection={connection} username={username} />} />\n        <Route component={GoToQuestionOne} />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction GoToQuestionOne() {\n  let history = useHistory();\n  history.push(\"/question/0\");\n  return <p>\"Loading...\"</p>;\n}\n\nfunction Game({ connection, username }) {\n\n  let { questionNr } = useParams();\n  let history = useHistory();\n\n  let [results, setResults] = useState([]);\n  let [endResult, setEndResult] = useState(null);\n\n  useEffect(() => {\n\n    connection.on('data', function (data) {\n      console.log('Received', data);\n\n      switch (data.type) {\n        case 'next':\n          history.push('/question/' + (parseInt(questionNr) + 1));\n          break;\n        case 'results':\n          setResults(data.payload);\n          break;\n        case 'endgame':\n          setEndResult(data.payload);\n          break;\n        default:\n          break;\n      }\n    });\n\n    connection.on('error', (conn) => {\n      console.log(conn);\n    });\n\n  });\n\n  const onAnswer = (answer) => {\n    connection.send(\n      {\n        type: 'answer',\n        username: username,\n        payload: answer\n      }\n    );\n  };\n\n  if (endResult) {\n    return <GameOver results={endResult} />;\n  }\n\n  return <Question key={questionNr} onAnswer={onAnswer} questionNr={questionNr} results={results} />;\n}\n\nfunction Question({ results, questionNr, onAnswer }) {\n\n  let answerField = useRef(null);\n\n  let [hasAnswered, setHasAnswered] = useState(false);\n\n  const answer = (event) => {\n    event.preventDefault();\n    setHasAnswered(true);\n\n    onAnswer({\n      questionNr: questionNr,\n      answer: answerField.current.value.toLowerCase()\n    });\n  };\n\n  if (results[questionNr]) {\n    return <Result results={results} questionNr={questionNr} />\n  }\n\n  if (hasAnswered) {\n    return <h1>Answer sent! <br />Please wait...</h1>;\n  }\n\n  return (\n    <>\n      <h1>{questions[questionNr]}</h1><br />\n      <form onSubmit={answer}>\n        <input type=\"text\" ref={answerField} /> <br /><br />\n        <button type=\"submit\">Answer</button>\n      </form>\n    </>)\n    ;\n}\n\nfunction Result({ results, questionNr }) {\n\n  if (!results[questionNr])\n    return null;\n\n  let currentResults = results[questionNr];\n\n  let wordCloudData = [];\n\n  let userAnswers = {};\n\n  currentResults.forEach(answer => {\n\n    // User answers\n    userAnswers[answer.username] = answer.answer;\n\n    // Word cloud\n\n    let oldEntry = wordCloudData.find(word => word.text.toLowerCase() === answer.answer);\n\n    if (oldEntry) {\n      oldEntry.value += 1;\n    } else {\n      wordCloudData.push({ text: answer.answer.toLowerCase(), value: 1 });\n    }\n  });\n\n  return <>\n    <h1>{questions[questionNr]}</h1>\n    <h2>Results</h2>\n    <ReactWordcloud\n      options={{\n        deterministic: true,\n        fontSizes: [44, 70]\n      }}\n      words={wordCloudData}\n    />\n\n    <br /><br />\n    <div>\n      {Object.keys(userAnswers).map((key) => <p key={key + \"useranswer\"}>{key} - {userAnswers[key]}</p>)}\n    </div>\n  </>;\n}\n\nfunction GameOver({ results }) {\n\n  let points = {};\n\n  results.forEach(questionResult => {\n    questionResult.forEach(answer => {\n      points[answer.username] = 0;\n    });\n  });\n\n  results.forEach(questionResult => {\n\n    let wordCloudData = [];\n    questionResult.forEach(answer => {\n\n      let oldEntry = wordCloudData.find(word => word.text.toLowerCase() === answer.answer);\n\n      if (oldEntry) {\n        oldEntry.value += 1;\n      } else {\n        wordCloudData.push({ text: answer.answer.toLowerCase(), value: 1 });\n      }\n    });\n\n    const topAnswer = wordCloudData.reduce(function (prev, current) {\n      return (prev.value > current.value) ? prev : current\n    });\n\n    let allTopAnswers = wordCloudData.filter(word => word.value === topAnswer.value);\n\n    allTopAnswers.forEach(topAnswer => {\n      let correctAnswers = questionResult.filter(answer => answer.answer.toLowerCase() === topAnswer.text.toLowerCase());\n\n      correctAnswers.forEach(correct => {\n        points[correct.username]++;\n      })\n    });\n  });\n\n  let pointsList = Object.keys(points).map(function (k) { return { name: k, points: points[k] } });\n\n  let sortedPointList = pointsList.sort((p1, p2) => p2.points - p1.points);\n\n  return (\n    <>\n      <h1>Final results</h1>\n      <div style={{ width: \"40%\", margin: \"auto\" }}>\n        <ol>\n          {sortedPointList.map((p, i) => <li key={p.name + \"points\"}><h2>{p.name}  -  {p.points} pts</h2></li>)}\n        </ol>\n        <img src=\"https://media3.giphy.com/media/QMkPpxPDYY0fu/giphy.gif?cid=ecf05e47iu1o394khd8975uaxekfw1pmouqlvsfadgdcqz9m&rid=giphy.gif\"></img>\n      </div>\n    </>);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}